import java.math.BigInteger;
import java.util.ArrayList;

public class Decryption {
    private static Integer e=5;
    private static Integer n=16781;
    private static Integer p;
    private static Integer q;
    private static Integer phi;
    private static BigInteger d;

    private static String message="  006886 006886 000026 000804 004249 006886 009763 014126\n" +
            "     009843 002338 009213 005404 006886 000765 009213 000177\n" +
            "     013696 006886 015861 014126 009843 015861 006886 015861\n" +
            "     014126 000804 001264 006886 004767 009213 009843 004249\n" +
            "     010358 009763 015861 006886 009543 000804 000676 009213\n" +
            "     006886 015861 000804 006886 009843 000177 013696 013507\n" +
            "     006886 006886 006886 008430 014126 000804 006886 002101\n" +
            "     000804 004249 006886 015861 014126 013696 006886 009763\n" +
            "     009213 009543 002101 006886 009843 004249 015861 006886\n" +
            "     009763 000804 006886 001264 000177 006883 004249 000804\n" +
            "     000676 004233 000765 009213 000177 015861 013889 006886\n" +
            "     006886 006886 015987 004249 009843 000177 015861 013507\n" +
            "     006886 004233 002101 006886 015861 014126 000804 001264\n" +
            "     006886 004218 004233 009543 015861 013507 006886 015861\n" +
            "     014126 000804 001264 006886 009843 004249 015861 006886\n" +
            "     004767 009213 009543 000804 000676 010358 000765 006886\n" +
            "     000804 002101 006886 002338 009843 000177 013696 013507\n" +
            "     006886 006886 006886 000243 001264 015861 006886 015861\n" +
            "     014126 009843 015861 006886 015861 014126 000804 001264\n" +
            "     006886 000177 000804 000177 009213 006886 009543 000804\n" +
            "     000676 010358 009763 015861 006886 004233 009763 006886\n" +
            "     002338 000804 009763 015861 006886 009213 000676 004233\n" +
            "     000765 009213 000177 015861 002951 006886 006886 006886\n" +
            "     000026 000804 004249 006886 015861 014126 000804 001264\n" +
            "     006886 009843 004249 015861 006886 009763 000804 006886\n" +
            "     006883 000804 009763 009763 009213 009763 009763 010358\n" +
            "     000765 006886 004218 004233 015861 014126 006886 002338\n" +
            "     001264 004249 000765 009213 004249 000804 001264 009763\n" +
            "     006886 014126 009843 015861 009213 013507 006886 006886\n" +
            "     006886 006318 014126 009843 015861 006886 010358 009257\n" +
            "     009843 004233 000177 009763 015861 006886 015861 014126\n" +
            "     013696 006886 009763 009213 009543 002101 006886 015861\n" +
            "     014126 000804 001264 006886 009763 015861 004233 001112\n" +
            "     012067 010358 009763 015861 006886 000177 000804 015861\n" +
            "     006886 015861 000804 006886 001112 000804 000177 009763\n" +
            "     006883 004233 004249 009213 013507 006886 006886 006886\n" +
            "     011610 009213 009213 012067 004233 000177 009257 006886\n" +
            "     015861 014126 009843 015861 006886 004767 009213 009843\n" +
            "     001264 015861 009213 000804 001264 009763 006886 004249\n" +
            "     000804 000804 002101 006886 015861 000804 006886 004249\n" +
            "     001264 004233 000177 009843 015861 009213 006886 006886\n" +
            "     006886 008430 014126 004233 001112 014126 006886 015861\n" +
            "     000804 006886 004249 009213 006883 009843 004233 004249\n" +
            "     006886 009763 014126 000804 001264 009543 000765 006886\n" +
            "     004767 009213 006886 015861 014126 013696 006886 001112\n" +
            "     014126 004233 009213 002101 006886 000765 009213 009763\n" +
            "     004233 004249 009213 013889 006886 006886 006886 008154\n" +
            "     005404 006886 001112 014126 009843 000177 009257 009213\n" +
            "     006886 015861 014126 013696 006886 015861 014126 000804\n" +
            "     001264 009257 014126 015861 013507 006886 015861 014126\n" +
            "     009843 015861 006886 016095 006886 002338 009843 013696\n" +
            "     006886 001112 014126 009843 000177 009257 009213 006886\n" +
            "     002338 013696 006886 002338 004233 000177 000765 002951\n" +
            "     006886 006886 006886 011610 014126 009843 009543 009543\n" +
            "     006886 014126 009843 015861 009213 006886 004767 009213\n" +
            "     006886 002101 009843 004233 004249 009213 004249 006886\n" +
            "     009543 000804 000765 009257 010358 000765 006886 015861\n" +
            "     014126 009843 000177 006886 009257 009213 000177 015861\n" +
            "     009543 009213 006886 009543 000804 000676 009213 005664\n" +
            "     006886 006886 006886 000243 009213 013507 006886 009843\n" +
            "     009763 006886 015861 014126 013696 006886 006883 004249\n" +
            "     009213 009763 009213 000177 001112 009213 006886 004233\n" +
            "     009763 013507 006886 009257 004249 009843 001112 004233\n" +
            "     000804 001264 009763 006886 009843 000177 000765 006886\n" +
            "     012067 004233 000177 000765 013507 006886 006886 006886\n" +
            "     008154 004249 006886 015861 000804 006886 015861 014126\n" +
            "     013696 009763 009213 009543 002101 006886 009843 015861\n" +
            "     006886 009543 009213 009843 009763 015861 006886 012067\n" +
            "     004233 000177 000765 003318 014126 009213 009843 004249\n" +
            "     015861 009213 000765 006886 006883 004249 000804 000676\n" +
            "     009213 002951 006886 006886 006886 006886 006886 000832\n" +
            "     009843 012067 009213 006886 015861 014126 009213 009213\n" +
            "     006886 009843 000177 000804 015861 014126 009213 004249\n" +
            "     006886 009763 009213 009543 002101 006886 002101 000804\n" +
            "     004249 006886 009543 000804 000676 009213 006886 000804\n" +
            "     002101 006886 002338 009213 013507 006886 006886 006886\n" +
            "     006886 006886 006318 014126 009843 015861 006886 004767\n" +
            "     009213 009843 001264 015861 013696 006886 009763 015861\n" +
            "     004233 009543 009543 006886 002338 009843 013696 006886\n" +
            "     009543 004233 000676 009213 006886 004233 000177 006886\n" +
            "     015861 014126 004233 000177 009213 006886 000804 004249\n" +
            "     006886 015861 014126 009213 009213 013889 006886 006886";



    public static Integer powm( Integer a, Integer n, Integer p ) {
        Integer	sq, y;
        String binary;

        for( y=1, sq=a%p; n>0; n>>=1, sq*=sq, sq%=p ) {
            binary=Integer.toBinaryString(n);
            char last=binary.charAt(binary.length()-1);
            int lastValue=Character.getNumericValue(last);

            if (lastValue ==1) {
                y *= sq;
                y %= p;
            }
        }
        return y;
    }

public static ArrayList<Integer> primeFactors(int number){
     ArrayList<Integer> factors= new ArrayList<>();
    for(int i=2; i<(number/i); i++) {
        if (number % i == 0) {
            number = number / i;
            factors.add(number);
            factors.add(i);
        }
    }
            return factors;
}

public static Integer phiEuler(Integer p, Integer q){
    return ((p-1)*(q-1));
}

public static BigInteger privateKey(Integer e, Integer phi){
    BigInteger key;
    BigInteger b= BigInteger.valueOf(e);
    key= b.modInverse(BigInteger.valueOf(phi)) ;
    return key;
}

    public static void main(String[] args){

    ArrayList<Integer> a=primeFactors(n);
    p=a.remove(1);
    q=a.remove(0);
    phi=phiEuler(p,q);
    d=privateKey(e,phi);
    Alphabete alfa=new Alphabete();

    String newMessage = (message.trim().replace("\n","").replace("     "," "));
    StringBuilder decodedText=new StringBuilder();
    String decodedString;
    String coded;
    int mapKey;
    Integer hashL;
        for(int i=0;i<newMessage.length();i=i+7){
            coded=newMessage.substring(i,i+6);
            mapKey=Integer.parseInt(coded);
            hashL=powm(mapKey,d.intValue(),n);
            decodedText.append(alfa.mapa.get(hashL));
        }
        decodedString=decodedText.toString();

System.out.print(decodedString.replace("   ","\n"));

    }
}


